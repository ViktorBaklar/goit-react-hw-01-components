{"version":3,"sources":["components/profile.js","components/statistics.js","components/friendListItem.js","components/friendList.js","components/transactionHistory.js","App.js","index.js"],"names":["Profile","name","avatar","tag","location","stats","followers","views","likes","className","src","alt","Statistics","title","map","item","style","backgroundColor","getRandomColor","label","percentage","id","Math","random","toString","substr","defaultProps","FriendListItem","isOnline","width","propTypes","friends","PropTypes","arrayOf","shape","oneOfType","string","number","isRequire","isRequired","FriendList","friend","TransactionHistory","items","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.561b3b3a.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Profile = ({\r\n  name,\r\n  avatar,\r\n  tag,\r\n  location,\r\n  stats: { followers, views, likes },\r\n}) => (\r\n  <div className=\"profile\">\r\n    <div className=\"description\">\r\n      <img\r\n        src={avatar}\r\n        alt=\"Аватар пользователя\"\r\n        className=\"avatar\"\r\n      />\r\n      <p className=\"name\">{name}</p>\r\n      <p className=\"tag\">@{tag}</p>\r\n      <p className=\"location\">{location}</p>\r\n    </div>\r\n\r\n    <ul className=\"stats\">\r\n      <li>\r\n        <span className=\"label\">Followers</span>\r\n        <span className=\"quantity\">{followers}</span>\r\n      </li>\r\n      <li>\r\n        <span className=\"label\">Views</span>\r\n        <span className=\"quantity\">{views}</span>\r\n      </li>\r\n      <li>\r\n        <span className=\"label\">Likes</span>\r\n        <span className=\"quantity\">{likes}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string,\r\n  tag: PropTypes.string,\r\n  location: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      followers: PropTypes.number.isRequired,\r\n      views: PropTypes.number.isRequired,\r\n      likes: PropTypes.number.isRequired,\r\n    })\r\n  )\r\n};\r\n\r\nexport default Profile;","import PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ title, stats }) => (\r\n  <section className=\"statistics\">\r\n    {title && <h2 className=\"title\">{title}</h2>}\r\n\r\n    <ul className=\"stat-list\">\r\n      {stats.map(item => (\r\n        <li className=\"item\" key={item.id} style={{ backgroundColor: getRandomColor() }} /* color={getRandomColor()} */ >\r\n          <span className=\"label\">{item.label}</span>\r\n          <span className=\"percentage\">{item.percentage}%</span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </section >\r\n);\r\n\r\n\r\nconst getRandomColor = () => {\r\n  return \"#\" + (0x1000000 + (Math.random()) * 0xffffff).toString(16).substr(1, 6);\r\n};\r\n\r\nStatistics.defaultProps = {\r\n  title: null,\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequire,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default Statistics;","import PropTypes from 'prop-types';\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline }) => (\r\n  < li className=\"item\">\r\n    <span className={`status ${isOnline ? 'online' : 'offline'}`}></span>\r\n    <img className=\"avatar\" src={avatar} alt=\"user avatar\" width=\"48\" />\r\n    <p className=\"name\">{name}</p>\r\n  </li>\r\n);\r\n\r\nFriendListItem.propTypes = {\r\n  isOnline: PropTypes.bool.isRequired,\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default FriendListItem;","import FriendListItem from './friendListItem'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FriendList = ({ friends }) => (\r\n  <ul className=\"friend-list\">\r\n    {friends.map(friend => (\r\n      <FriendListItem\r\n        key={friend.id}\r\n        avatar={friend.avatar}\r\n        name={friend.name}\r\n        isOnline={friend.isOnline}\r\n      />\r\n    ))}\r\n  </ul >\r\n);\r\n\r\nFriendListItem.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequire,\r\n    }),\r\n  ).isRequired\r\n};\r\n\r\nexport default FriendList;","import PropTypes from 'prop-types';\r\n\r\nconst TransactionHistory = ({ items }) => (\r\n  <table className=\"transaction-history\">\r\n    <thead>\r\n      <tr>\r\n        <th>Type</th>\r\n        <th>Amount</th>\r\n        <th>Currency</th>\r\n      </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n      {items.map(item => (\r\n        <tr key={item.id}>\r\n          <td>{item.type}</td>\r\n          <td>{item.amount}</td>\r\n          <td>{item.currency}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n)\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.shape({ id: PropTypes.string.isRequired }))\r\n    .isRequired,\r\n};\r\n\r\n\r\nexport default TransactionHistory;","import './App.css';\nimport Profile from './components/profile';\nimport user from './user.json';\nimport Statistics from './components/statistics';\nimport statisticalData from './statistical-data.json';\nimport FriendList from './components/friendList';\nimport friends from './friends.json'\nimport TransactionHistory from './components/transactionHistory';\nimport transactions from './transactions.json';\n\n\nconst App = () => {\n  return <div className=\"react-components\">\n    <h2>Task-1. User profile</h2>\n    <Profile\n      name={user.name}\n      location={user.location}\n      tag={user.tag}\n      avatar={user.avatar}\n      stats={user.stats}\n    />\n    <h2>Task-2. Statistical data</h2>\n    <Statistics title=\"Upload stats\" stats={statisticalData} />\n    <Statistics stats={statisticalData} />\n    <h2>Task-3. Friendslist</h2>\n    <FriendList friends={friends} />\n    <h2>Task-4. Transactions</h2>\n    <TransactionHistory items={transactions} />\n  </div>\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}